{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@glidejs/glide/dist/glide.esm.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","defaults","type","startAt","perView","focusAt","gap","autoplay","hoverpause","keyboard","bound","swipeThreshold","dragThreshold","perTouch","touchRatio","touchAngle","animationDuration","rewind","rewindDuration","animationTimingFunc","throttle","direction","peek","breakpoints","classes","ltr","rtl","slider","carousel","swipeable","dragging","cloneSlide","activeNav","activeSlide","disabledArrow","warn","msg","console","error","_typeof","iterator","obj","constructor","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","target","props","length","descriptor","configurable","writable","protoProps","staticProps","_extends","assign","arguments","source","possibleConstructorReturn","self","ReferenceError","toInt","parseInt","isString","isObject","isFunction","isUndefined","isArray","Array","define","prop","definition","mergeOptions","settings","options","EventsBus","events","undefined","this","hop","event","handler","on","index","push","remove","context","emit","forEach","item","Glide","selector","_c","_t","_e","disabled","extensions","glide","components","_name","mount","transformers","pattern","Run","make","distance","Transition","disable","Move","interval","_o","set","_i","_d","status","now","Date","getTime","func","wait","timeout","args","result","previous","later","leading","apply","throttled","at","remaining","clearTimeout","trailing","setTimeout","cancel","MARGIN_TYPE","siblings","node","parentNode","firstChild","matched","nextSibling","nodeType","exist","window","HTMLElement","TRACK_SELECTOR","EventsBinder","listeners","el","closure","capture","addEventListener","removeEventListener","VALID_DIRECTIONS","FLIPED_MOVEMENTS",">","<","=","Rtl","Components","modify","translate","Direction","is","Gap","Gaps","Grow","Clones","grow","Peeking","Peek","before","Focusing","width","Sizes","slideWidth","supportsPassive","opts","e","supportsPassive$1","START_EVENTS","MOVE_EVENTS","END_EVENTS","MOUSE_EVENTS","NAV_SELECTOR","CONTROLS_SELECTOR","sortBreakpoints","points","keys","sort","reduce","k","COMPONENTS","Html","root","track","querySelector","slides","slice","wrapper","children","filter","slide","classList","contains","_r","document","Translate","Events","transform","TRANSFORMERS","concat","mutate","transformer","mutator","style","isType","isOffset","after","movement","compose","duration","transition","callback","enable","offset","resolve","token","split","join","addClass","add","removeClass","_v","indexOf","setupSlides","setupWrapper","dimention","wrapperSize","offsetWidth","reductor","len","marginLeft","marginRight","_this","items","collect","_Glide$settings","part","start","end","Math","max","floor","clone","cloneNode","_clone","unshift","append","_Components$Html","half","prepend","reverse","appendChild","_i2","insertBefore","_i3","removeChild","Resize","Binder","unbind","off","destroy","Build","typeClass","activeClass","sibling","removeClasses","move","calculate","steps","countableSteps","isEnd","min","isStart","_m","substr","Swipe","swipeSin","swipeStartX","swipeStartY","moveable","passive","bindSwipeStart","swipe","touches","pageX","pageY","bindSwipeMove","bindSwipeEnd","subExSx","subEySy","powEX","abs","powEY","swipeHypotenuse","sqrt","swipeCathetus","asin","PI","stopPropagation","parseFloat","threshold","swipeDistance","swipeDeg","round","unbindSwipeMove","unbindSwipeEnd","unbindSwipeStart","_this2","_this3","changedTouches","Images","dragstart","preventDefault","Anchors","detached","prevented","_a","querySelectorAll","click","detach","draggable","setAttribute","getAttribute","removeAttribute","attach","Controls","_n","addBindings","setActive","removeActive","controls","removeBindings","elements","currentTarget","Keyboard","press","keyCode","Autoplay","setInterval","stop","time","clearInterval","Breakpoints","match","matchMedia","point","matches","glide_esm","_Core","Glide$$1","__proto__","getPrototypeOf","subClass","superClass","setPrototypeOf","inherits","receiver","Function","desc","getOwnPropertyDescriptor","parent","glideTop","glideBottom"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","/*!\n * Glide.js v3.2.6\n * (c) 2013-2019 Jędrzej Chałubek <jedrzej.chalubek@gmail.com> (http://jedrzejchalubek.com/)\n * Released under the MIT License.\n */\n\nvar defaults = {\n  /**\n   * Type of the movement.\n   *\n   * Available types:\n   * `slider` - Rewinds slider to the start/end when it reaches the first or last slide.\n   * `carousel` - Changes slides without starting over when it reaches the first or last slide.\n   *\n   * @type {String}\n   */\n  type: 'slider',\n\n  /**\n   * Start at specific slide number defined with zero-based index.\n   *\n   * @type {Number}\n   */\n  startAt: 0,\n\n  /**\n   * A number of slides visible on the single viewport.\n   *\n   * @type {Number}\n   */\n  perView: 1,\n\n  /**\n   * Focus currently active slide at a specified position in the track.\n   *\n   * Available inputs:\n   * `center` - Current slide will be always focused at the center of a track.\n   * `0,1,2,3...` - Current slide will be focused on the specified zero-based index.\n   *\n   * @type {String|Number}\n   */\n  focusAt: 0,\n\n  /**\n   * A size of the gap added between slides.\n   *\n   * @type {Number}\n   */\n  gap: 10,\n\n  /**\n   * Change slides after a specified interval. Use `false` for turning off autoplay.\n   *\n   * @type {Number|Boolean}\n   */\n  autoplay: false,\n\n  /**\n   * Stop autoplay on mouseover event.\n   *\n   * @type {Boolean}\n   */\n  hoverpause: true,\n\n  /**\n   * Allow for changing slides with left and right keyboard arrows.\n   *\n   * @type {Boolean}\n   */\n  keyboard: true,\n\n  /**\n   * Stop running `perView` number of slides from the end. Use this\n   * option if you don't want to have an empty space after\n   * a slider. Works only with `slider` type and a\n   * non-centered `focusAt` setting.\n   *\n   * @type {Boolean}\n   */\n  bound: false,\n\n  /**\n   * Minimal swipe distance needed to change the slide. Use `false` for turning off a swiping.\n   *\n   * @type {Number|Boolean}\n   */\n  swipeThreshold: 80,\n\n  /**\n   * Minimal mouse drag distance needed to change the slide. Use `false` for turning off a dragging.\n   *\n   * @type {Number|Boolean}\n   */\n  dragThreshold: 120,\n\n  /**\n   * A maximum number of slides to which movement will be made on swiping or dragging. Use `false` for unlimited.\n   *\n   * @type {Number|Boolean}\n   */\n  perTouch: false,\n\n  /**\n   * Moving distance ratio of the slides on a swiping and dragging.\n   *\n   * @type {Number}\n   */\n  touchRatio: 0.5,\n\n  /**\n   * Angle required to activate slides moving on swiping or dragging.\n   *\n   * @type {Number}\n   */\n  touchAngle: 45,\n\n  /**\n   * Duration of the animation in milliseconds.\n   *\n   * @type {Number}\n   */\n  animationDuration: 400,\n\n  /**\n   * Allows looping the `slider` type. Slider will rewind to the first/last slide when it's at the start/end.\n   *\n   * @type {Boolean}\n   */\n  rewind: true,\n\n  /**\n   * Duration of the rewinding animation of the `slider` type in milliseconds.\n   *\n   * @type {Number}\n   */\n  rewindDuration: 800,\n\n  /**\n   * Easing function for the animation.\n   *\n   * @type {String}\n   */\n  animationTimingFunc: 'cubic-bezier(.165, .840, .440, 1)',\n\n  /**\n   * Throttle costly events at most once per every wait milliseconds.\n   *\n   * @type {Number}\n   */\n  throttle: 10,\n\n  /**\n   * Moving direction mode.\n   *\n   * Available inputs:\n   * - 'ltr' - left to right movement,\n   * - 'rtl' - right to left movement.\n   *\n   * @type {String}\n   */\n  direction: 'ltr',\n\n  /**\n   * The distance value of the next and previous viewports which\n   * have to peek in the current view. Accepts number and\n   * pixels as a string. Left and right peeking can be\n   * set up separately with a directions object.\n   *\n   * For example:\n   * `100` - Peek 100px on the both sides.\n   * { before: 100, after: 50 }` - Peek 100px on the left side and 50px on the right side.\n   *\n   * @type {Number|String|Object}\n   */\n  peek: 0,\n\n  /**\n   * Collection of options applied at specified media breakpoints.\n   * For example: display two slides per view under 800px.\n   * `{\n   *   '800px': {\n   *     perView: 2\n   *   }\n   * }`\n   */\n  breakpoints: {},\n\n  /**\n   * Collection of internally used HTML classes.\n   *\n   * @todo Refactor `slider` and `carousel` properties to single `type: { slider: '', carousel: '' }` object\n   * @type {Object}\n   */\n  classes: {\n    direction: {\n      ltr: 'glide--ltr',\n      rtl: 'glide--rtl'\n    },\n    slider: 'glide--slider',\n    carousel: 'glide--carousel',\n    swipeable: 'glide--swipeable',\n    dragging: 'glide--dragging',\n    cloneSlide: 'glide__slide--clone',\n    activeNav: 'glide__bullet--active',\n    activeSlide: 'glide__slide--active',\n    disabledArrow: 'glide__arrow--disabled'\n  }\n};\n\n/**\n * Outputs warning message to the bowser console.\n *\n * @param  {String} msg\n * @return {Void}\n */\nfunction warn(msg) {\n  console.error(\"[Glide warn]: \" + msg);\n}\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar get = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n/**\n * Converts value entered as number\n * or string to integer value.\n *\n * @param {String} value\n * @returns {Number}\n */\nfunction toInt(value) {\n  return parseInt(value);\n}\n\n/**\n * Converts value entered as number\n * or string to flat value.\n *\n * @param {String} value\n * @returns {Number}\n */\nfunction toFloat(value) {\n  return parseFloat(value);\n}\n\n/**\n * Indicates whether the specified value is a string.\n *\n * @param  {*}   value\n * @return {Boolean}\n */\nfunction isString(value) {\n  return typeof value === 'string';\n}\n\n/**\n * Indicates whether the specified value is an object.\n *\n * @param  {*} value\n * @return {Boolean}\n *\n * @see https://github.com/jashkenas/underscore\n */\nfunction isObject(value) {\n  var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);\n\n  return type === 'function' || type === 'object' && !!value; // eslint-disable-line no-mixed-operators\n}\n\n/**\n * Indicates whether the specified value is a number.\n *\n * @param  {*} value\n * @return {Boolean}\n */\nfunction isNumber(value) {\n  return typeof value === 'number';\n}\n\n/**\n * Indicates whether the specified value is a function.\n *\n * @param  {*} value\n * @return {Boolean}\n */\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n\n/**\n * Indicates whether the specified value is undefined.\n *\n * @param  {*} value\n * @return {Boolean}\n */\nfunction isUndefined(value) {\n  return typeof value === 'undefined';\n}\n\n/**\n * Indicates whether the specified value is an array.\n *\n * @param  {*} value\n * @return {Boolean}\n */\nfunction isArray(value) {\n  return value.constructor === Array;\n}\n\n/**\n * Creates and initializes specified collection of extensions.\n * Each extension receives access to instance of glide and rest of components.\n *\n * @param {Object} glide\n * @param {Object} extensions\n *\n * @returns {Object}\n */\nfunction mount(glide, extensions, events) {\n  var components = {};\n\n  for (var name in extensions) {\n    if (isFunction(extensions[name])) {\n      components[name] = extensions[name](glide, components, events);\n    } else {\n      warn('Extension must be a function');\n    }\n  }\n\n  for (var _name in components) {\n    if (isFunction(components[_name].mount)) {\n      components[_name].mount();\n    }\n  }\n\n  return components;\n}\n\n/**\n * Defines getter and setter property on the specified object.\n *\n * @param  {Object} obj         Object where property has to be defined.\n * @param  {String} prop        Name of the defined property.\n * @param  {Object} definition  Get and set definitions for the property.\n * @return {Void}\n */\nfunction define(obj, prop, definition) {\n  Object.defineProperty(obj, prop, definition);\n}\n\n/**\n * Sorts aphabetically object keys.\n *\n * @param  {Object} obj\n * @return {Object}\n */\nfunction sortKeys(obj) {\n  return Object.keys(obj).sort().reduce(function (r, k) {\n    r[k] = obj[k];\n\n    return r[k], r;\n  }, {});\n}\n\n/**\n * Merges passed settings object with default options.\n *\n * @param  {Object} defaults\n * @param  {Object} settings\n * @return {Object}\n */\nfunction mergeOptions(defaults, settings) {\n  var options = _extends({}, defaults, settings);\n\n  // `Object.assign` do not deeply merge objects, so we\n  // have to do it manually for every nested object\n  // in options. Although it does not look smart,\n  // it's smaller and faster than some fancy\n  // merging deep-merge algorithm script.\n  if (settings.hasOwnProperty('classes')) {\n    options.classes = _extends({}, defaults.classes, settings.classes);\n\n    if (settings.classes.hasOwnProperty('direction')) {\n      options.classes.direction = _extends({}, defaults.classes.direction, settings.classes.direction);\n    }\n  }\n\n  if (settings.hasOwnProperty('breakpoints')) {\n    options.breakpoints = _extends({}, defaults.breakpoints, settings.breakpoints);\n  }\n\n  return options;\n}\n\nvar EventsBus = function () {\n  /**\n   * Construct a EventBus instance.\n   *\n   * @param {Object} events\n   */\n  function EventsBus() {\n    var events = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, EventsBus);\n\n    this.events = events;\n    this.hop = events.hasOwnProperty;\n  }\n\n  /**\n   * Adds listener to the specifed event.\n   *\n   * @param {String|Array} event\n   * @param {Function} handler\n   */\n\n\n  createClass(EventsBus, [{\n    key: 'on',\n    value: function on(event, handler) {\n      if (isArray(event)) {\n        for (var i = 0; i < event.length; i++) {\n          this.on(event[i], handler);\n        }\n      }\n\n      // Create the event's object if not yet created\n      if (!this.hop.call(this.events, event)) {\n        this.events[event] = [];\n      }\n\n      // Add the handler to queue\n      var index = this.events[event].push(handler) - 1;\n\n      // Provide handle back for removal of event\n      return {\n        remove: function remove() {\n          delete this.events[event][index];\n        }\n      };\n    }\n\n    /**\n     * Runs registered handlers for specified event.\n     *\n     * @param {String|Array} event\n     * @param {Object=} context\n     */\n\n  }, {\n    key: 'emit',\n    value: function emit(event, context) {\n      if (isArray(event)) {\n        for (var i = 0; i < event.length; i++) {\n          this.emit(event[i], context);\n        }\n      }\n\n      // If the event doesn't exist, or there's no handlers in queue, just leave\n      if (!this.hop.call(this.events, event)) {\n        return;\n      }\n\n      // Cycle through events queue, fire!\n      this.events[event].forEach(function (item) {\n        item(context || {});\n      });\n    }\n  }]);\n  return EventsBus;\n}();\n\nvar Glide = function () {\n  /**\r\n   * Construct glide.\r\n   *\r\n   * @param  {String} selector\r\n   * @param  {Object} options\r\n   */\n  function Glide(selector) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, Glide);\n\n    this._c = {};\n    this._t = [];\n    this._e = new EventsBus();\n\n    this.disabled = false;\n    this.selector = selector;\n    this.settings = mergeOptions(defaults, options);\n    this.index = this.settings.startAt;\n  }\n\n  /**\r\n   * Initializes glide.\r\n   *\r\n   * @param {Object} extensions Collection of extensions to initialize.\r\n   * @return {Glide}\r\n   */\n\n\n  createClass(Glide, [{\n    key: 'mount',\n    value: function mount$$1() {\n      var extensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      this._e.emit('mount.before');\n\n      if (isObject(extensions)) {\n        this._c = mount(this, extensions, this._e);\n      } else {\n        warn('You need to provide a object on `mount()`');\n      }\n\n      this._e.emit('mount.after');\n\n      return this;\n    }\n\n    /**\r\n     * Collects an instance `translate` transformers.\r\n     *\r\n     * @param  {Array} transformers Collection of transformers.\r\n     * @return {Void}\r\n     */\n\n  }, {\n    key: 'mutate',\n    value: function mutate() {\n      var transformers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      if (isArray(transformers)) {\n        this._t = transformers;\n      } else {\n        warn('You need to provide a array on `mutate()`');\n      }\n\n      return this;\n    }\n\n    /**\r\n     * Updates glide with specified settings.\r\n     *\r\n     * @param {Object} settings\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'update',\n    value: function update() {\n      var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      this.settings = mergeOptions(this.settings, settings);\n\n      if (settings.hasOwnProperty('startAt')) {\n        this.index = settings.startAt;\n      }\n\n      this._e.emit('update');\n\n      return this;\n    }\n\n    /**\r\n     * Change slide with specified pattern. A pattern must be in the special format:\r\n     * `>` - Move one forward\r\n     * `<` - Move one backward\r\n     * `={i}` - Go to {i} zero-based slide (eq. '=1', will go to second slide)\r\n     * `>>` - Rewinds to end (last slide)\r\n     * `<<` - Rewinds to start (first slide)\r\n     *\r\n     * @param {String} pattern\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'go',\n    value: function go(pattern) {\n      this._c.Run.make(pattern);\n\n      return this;\n    }\n\n    /**\r\n     * Move track by specified distance.\r\n     *\r\n     * @param {String} distance\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'move',\n    value: function move(distance) {\n      this._c.Transition.disable();\n      this._c.Move.make(distance);\n\n      return this;\n    }\n\n    /**\r\n     * Destroy instance and revert all changes done by this._c.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this._e.emit('destroy');\n\n      return this;\n    }\n\n    /**\r\n     * Start instance autoplaying.\r\n     *\r\n     * @param {Boolean|Number} interval Run autoplaying with passed interval regardless of `autoplay` settings\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      var interval = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (interval) {\n        this.settings.autoplay = interval;\n      }\n\n      this._e.emit('play');\n\n      return this;\n    }\n\n    /**\r\n     * Stop instance autoplaying.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this._e.emit('pause');\n\n      return this;\n    }\n\n    /**\r\n     * Sets glide into a idle status.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'disable',\n    value: function disable() {\n      this.disabled = true;\n\n      return this;\n    }\n\n    /**\r\n     * Sets glide into a active status.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'enable',\n    value: function enable() {\n      this.disabled = false;\n\n      return this;\n    }\n\n    /**\r\n     * Adds cuutom event listener with handler.\r\n     *\r\n     * @param  {String|Array} event\r\n     * @param  {Function} handler\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'on',\n    value: function on(event, handler) {\n      this._e.on(event, handler);\n\n      return this;\n    }\n\n    /**\r\n     * Checks if glide is a precised type.\r\n     *\r\n     * @param  {String} name\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: 'isType',\n    value: function isType(name) {\n      return this.settings.type === name;\n    }\n\n    /**\r\n     * Gets value of the core options.\r\n     *\r\n     * @return {Object}\r\n     */\n\n  }, {\n    key: 'settings',\n    get: function get$$1() {\n      return this._o;\n    }\n\n    /**\r\n     * Sets value of the core options.\r\n     *\r\n     * @param  {Object} o\r\n     * @return {Void}\r\n     */\n    ,\n    set: function set$$1(o) {\n      if (isObject(o)) {\n        this._o = o;\n      } else {\n        warn('Options must be an `object` instance.');\n      }\n    }\n\n    /**\r\n     * Gets current index of the slider.\r\n     *\r\n     * @return {Object}\r\n     */\n\n  }, {\n    key: 'index',\n    get: function get$$1() {\n      return this._i;\n    }\n\n    /**\r\n     * Sets current index a slider.\r\n     *\r\n     * @return {Object}\r\n     */\n    ,\n    set: function set$$1(i) {\n      this._i = toInt(i);\n    }\n\n    /**\r\n     * Gets type name of the slider.\r\n     *\r\n     * @return {String}\r\n     */\n\n  }, {\n    key: 'type',\n    get: function get$$1() {\n      return this.settings.type;\n    }\n\n    /**\r\n     * Gets value of the idle status.\r\n     *\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: 'disabled',\n    get: function get$$1() {\n      return this._d;\n    }\n\n    /**\r\n     * Sets value of the idle status.\r\n     *\r\n     * @return {Boolean}\r\n     */\n    ,\n    set: function set$$1(status) {\n      this._d = !!status;\n    }\n  }]);\n  return Glide;\n}();\n\nfunction Run (Glide, Components, Events) {\n  var Run = {\n    /**\n     * Initializes autorunning of the glide.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this._o = false;\n    },\n\n\n    /**\n     * Makes glides running based on the passed moving schema.\n     *\n     * @param {String} move\n     */\n    make: function make(move) {\n      var _this = this;\n\n      if (!Glide.disabled) {\n        Glide.disable();\n\n        this.move = move;\n\n        Events.emit('run.before', this.move);\n\n        this.calculate();\n\n        Events.emit('run', this.move);\n\n        Components.Transition.after(function () {\n          if (_this.isOffset('<') || _this.isOffset('>')) {\n            _this._o = false;\n\n            Events.emit('run.offset', _this.move);\n          }\n\n          Events.emit('run.after', _this.move);\n\n          Glide.enable();\n        });\n      }\n    },\n\n\n    /**\n     * Calculates current index based on defined move.\n     *\n     * @return {Void}\n     */\n    calculate: function calculate() {\n      var move = this.move,\n          length = this.length;\n      var steps = move.steps,\n          direction = move.direction;\n\n\n      var countableSteps = isNumber(toInt(steps)) && toInt(steps) !== 0;\n\n      switch (direction) {\n        case '>':\n          if (steps === '>') {\n            Glide.index = length;\n          } else if (this.isEnd()) {\n            if (!(Glide.isType('slider') && !Glide.settings.rewind)) {\n              this._o = true;\n\n              Glide.index = 0;\n            }\n\n            Events.emit('run.end', move);\n          } else if (countableSteps) {\n            Glide.index += Math.min(length - Glide.index, -toInt(steps));\n          } else {\n            Glide.index++;\n          }\n          break;\n\n        case '<':\n          if (steps === '<') {\n            Glide.index = 0;\n          } else if (this.isStart()) {\n            if (!(Glide.isType('slider') && !Glide.settings.rewind)) {\n              this._o = true;\n\n              Glide.index = length;\n            }\n\n            Events.emit('run.start', move);\n          } else if (countableSteps) {\n            Glide.index -= Math.min(Glide.index, toInt(steps));\n          } else {\n            Glide.index--;\n          }\n          break;\n\n        case '=':\n          Glide.index = steps;\n          break;\n      }\n    },\n\n\n    /**\n     * Checks if we are on the first slide.\n     *\n     * @return {Boolean}\n     */\n    isStart: function isStart() {\n      return Glide.index === 0;\n    },\n\n\n    /**\n     * Checks if we are on the last slide.\n     *\n     * @return {Boolean}\n     */\n    isEnd: function isEnd() {\n      return Glide.index === this.length;\n    },\n\n\n    /**\n     * Checks if we are making a offset run.\n     *\n     * @param {String} direction\n     * @return {Boolean}\n     */\n    isOffset: function isOffset(direction) {\n      return this._o && this.move.direction === direction;\n    }\n  };\n\n  define(Run, 'move', {\n    /**\n     * Gets value of the move schema.\n     *\n     * @returns {Object}\n     */\n    get: function get() {\n      return this._m;\n    },\n\n\n    /**\n     * Sets value of the move schema.\n     *\n     * @returns {Object}\n     */\n    set: function set(value) {\n      this._m = {\n        direction: value.substr(0, 1),\n        steps: value.substr(1) ? value.substr(1) : 0\n      };\n    }\n  });\n\n  define(Run, 'length', {\n    /**\n     * Gets value of the running distance based\n     * on zero-indexing number of slides.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var settings = Glide.settings;\n      var length = Components.Html.slides.length;\n\n      // If the `bound` option is acitve, a maximum running distance should be\n      // reduced by `perView` and `focusAt` settings. Running distance\n      // should end before creating an empty space after instance.\n\n      if (Glide.isType('slider') && settings.focusAt !== 'center' && settings.bound) {\n        return length - 1 - (toInt(settings.perView) - 1) + toInt(settings.focusAt);\n      }\n\n      return length - 1;\n    }\n  });\n\n  define(Run, 'offset', {\n    /**\n     * Gets status of the offsetting flag.\n     *\n     * @return {Boolean}\n     */\n    get: function get() {\n      return this._o;\n    }\n  });\n\n  return Run;\n}\n\n/**\n * Returns a current time.\n *\n * @return {Number}\n */\nfunction now() {\n  return new Date().getTime();\n}\n\n/**\n * Returns a function, that, when invoked, will only be triggered\n * at most once during a given window of time.\n *\n * @param {Function} func\n * @param {Number} wait\n * @param {Object=} options\n * @return {Function}\n *\n * @see https://github.com/jashkenas/underscore\n */\nfunction throttle(func, wait, options) {\n  var timeout = void 0,\n      context = void 0,\n      args = void 0,\n      result = void 0;\n  var previous = 0;\n  if (!options) options = {};\n\n  var later = function later() {\n    previous = options.leading === false ? 0 : now();\n    timeout = null;\n    result = func.apply(context, args);\n    if (!timeout) context = args = null;\n  };\n\n  var throttled = function throttled() {\n    var at = now();\n    if (!previous && options.leading === false) previous = at;\n    var remaining = wait - (at - previous);\n    context = this;\n    args = arguments;\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n      previous = at;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n    return result;\n  };\n\n  throttled.cancel = function () {\n    clearTimeout(timeout);\n    previous = 0;\n    timeout = context = args = null;\n  };\n\n  return throttled;\n}\n\nvar MARGIN_TYPE = {\n  ltr: ['marginLeft', 'marginRight'],\n  rtl: ['marginRight', 'marginLeft']\n};\n\nfunction Gaps (Glide, Components, Events) {\n  var Gaps = {\n    /**\n     * Applies gaps between slides. First and last\n     * slides do not receive it's edge margins.\n     *\n     * @param {HTMLCollection} slides\n     * @return {Void}\n     */\n    apply: function apply(slides) {\n      for (var i = 0, len = slides.length; i < len; i++) {\n        var style = slides[i].style;\n        var direction = Components.Direction.value;\n\n        if (i !== 0) {\n          style[MARGIN_TYPE[direction][0]] = this.value / 2 + 'px';\n        } else {\n          style[MARGIN_TYPE[direction][0]] = '';\n        }\n\n        if (i !== slides.length - 1) {\n          style[MARGIN_TYPE[direction][1]] = this.value / 2 + 'px';\n        } else {\n          style[MARGIN_TYPE[direction][1]] = '';\n        }\n      }\n    },\n\n\n    /**\n     * Removes gaps from the slides.\n     *\n     * @param {HTMLCollection} slides\n     * @returns {Void}\n    */\n    remove: function remove(slides) {\n      for (var i = 0, len = slides.length; i < len; i++) {\n        var style = slides[i].style;\n\n        style.marginLeft = '';\n        style.marginRight = '';\n      }\n    }\n  };\n\n  define(Gaps, 'value', {\n    /**\n     * Gets value of the gap.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return toInt(Glide.settings.gap);\n    }\n  });\n\n  define(Gaps, 'grow', {\n    /**\n     * Gets additional dimentions value caused by gaps.\n     * Used to increase width of the slides wrapper.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return Gaps.value * (Components.Sizes.length - 1);\n    }\n  });\n\n  define(Gaps, 'reductor', {\n    /**\n     * Gets reduction value caused by gaps.\n     * Used to subtract width of the slides.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      var perView = Glide.settings.perView;\n\n      return Gaps.value * (perView - 1) / perView;\n    }\n  });\n\n  /**\n   * Apply calculated gaps:\n   * - after building, so slides (including clones) will receive proper margins\n   * - on updating via API, to recalculate gaps with new options\n   */\n  Events.on(['build.after', 'update'], throttle(function () {\n    Gaps.apply(Components.Html.wrapper.children);\n  }, 30));\n\n  /**\n   * Remove gaps:\n   * - on destroying to bring markup to its inital state\n   */\n  Events.on('destroy', function () {\n    Gaps.remove(Components.Html.wrapper.children);\n  });\n\n  return Gaps;\n}\n\n/**\n * Finds siblings nodes of the passed node.\n *\n * @param  {Element} node\n * @return {Array}\n */\nfunction siblings(node) {\n  if (node && node.parentNode) {\n    var n = node.parentNode.firstChild;\n    var matched = [];\n\n    for (; n; n = n.nextSibling) {\n      if (n.nodeType === 1 && n !== node) {\n        matched.push(n);\n      }\n    }\n\n    return matched;\n  }\n\n  return [];\n}\n\n/**\n * Checks if passed node exist and is a valid element.\n *\n * @param  {Element} node\n * @return {Boolean}\n */\nfunction exist(node) {\n  if (node && node instanceof window.HTMLElement) {\n    return true;\n  }\n\n  return false;\n}\n\nvar TRACK_SELECTOR = '[data-glide-el=\"track\"]';\n\nfunction Html (Glide, Components) {\n  var Html = {\n    /**\n     * Setup slider HTML nodes.\n     *\n     * @param {Glide} glide\n     */\n    mount: function mount() {\n      this.root = Glide.selector;\n      this.track = this.root.querySelector(TRACK_SELECTOR);\n      this.slides = Array.prototype.slice.call(this.wrapper.children).filter(function (slide) {\n        return !slide.classList.contains(Glide.settings.classes.cloneSlide);\n      });\n    }\n  };\n\n  define(Html, 'root', {\n    /**\n     * Gets node of the glide main element.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html._r;\n    },\n\n\n    /**\n     * Sets node of the glide main element.\n     *\n     * @return {Object}\n     */\n    set: function set(r) {\n      if (isString(r)) {\n        r = document.querySelector(r);\n      }\n\n      if (exist(r)) {\n        Html._r = r;\n      } else {\n        warn('Root element must be a existing Html node');\n      }\n    }\n  });\n\n  define(Html, 'track', {\n    /**\n     * Gets node of the glide track with slides.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html._t;\n    },\n\n\n    /**\n     * Sets node of the glide track with slides.\n     *\n     * @return {Object}\n     */\n    set: function set(t) {\n      if (exist(t)) {\n        Html._t = t;\n      } else {\n        warn('Could not find track element. Please use ' + TRACK_SELECTOR + ' attribute.');\n      }\n    }\n  });\n\n  define(Html, 'wrapper', {\n    /**\n     * Gets node of the slides wrapper.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html.track.children[0];\n    }\n  });\n\n  return Html;\n}\n\nfunction Peek (Glide, Components, Events) {\n  var Peek = {\n    /**\n     * Setups how much to peek based on settings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.value = Glide.settings.peek;\n    }\n  };\n\n  define(Peek, 'value', {\n    /**\n     * Gets value of the peek.\n     *\n     * @returns {Number|Object}\n     */\n    get: function get() {\n      return Peek._v;\n    },\n\n\n    /**\n     * Sets value of the peek.\n     *\n     * @param {Number|Object} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      if (isObject(value)) {\n        value.before = toInt(value.before);\n        value.after = toInt(value.after);\n      } else {\n        value = toInt(value);\n      }\n\n      Peek._v = value;\n    }\n  });\n\n  define(Peek, 'reductor', {\n    /**\n     * Gets reduction value caused by peek.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      var value = Peek.value;\n      var perView = Glide.settings.perView;\n\n      if (isObject(value)) {\n        return value.before / perView + value.after / perView;\n      }\n\n      return value * 2 / perView;\n    }\n  });\n\n  /**\n   * Recalculate peeking sizes on:\n   * - when resizing window to update to proper percents\n   */\n  Events.on(['resize', 'update'], function () {\n    Peek.mount();\n  });\n\n  return Peek;\n}\n\nfunction Move (Glide, Components, Events) {\n  var Move = {\n    /**\n     * Constructs move component.\n     *\n     * @returns {Void}\n     */\n    mount: function mount() {\n      this._o = 0;\n    },\n\n\n    /**\n     * Calculates a movement value based on passed offset and currently active index.\n     *\n     * @param  {Number} offset\n     * @return {Void}\n     */\n    make: function make() {\n      var _this = this;\n\n      var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      this.offset = offset;\n\n      Events.emit('move', {\n        movement: this.value\n      });\n\n      Components.Transition.after(function () {\n        Events.emit('move.after', {\n          movement: _this.value\n        });\n      });\n    }\n  };\n\n  define(Move, 'offset', {\n    /**\n     * Gets an offset value used to modify current translate.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Move._o;\n    },\n\n\n    /**\n     * Sets an offset value used to modify current translate.\n     *\n     * @return {Object}\n     */\n    set: function set(value) {\n      Move._o = !isUndefined(value) ? toInt(value) : 0;\n    }\n  });\n\n  define(Move, 'translate', {\n    /**\n     * Gets a raw movement value.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Sizes.slideWidth * Glide.index;\n    }\n  });\n\n  define(Move, 'value', {\n    /**\n     * Gets an actual movement value corrected by offset.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var offset = this.offset;\n      var translate = this.translate;\n\n      if (Components.Direction.is('rtl')) {\n        return translate + offset;\n      }\n\n      return translate - offset;\n    }\n  });\n\n  /**\n   * Make movement to proper slide on:\n   * - before build, so glide will start at `startAt` index\n   * - on each standard run to move to newly calculated index\n   */\n  Events.on(['build.before', 'run'], function () {\n    Move.make();\n  });\n\n  return Move;\n}\n\nfunction Sizes (Glide, Components, Events) {\n  var Sizes = {\n    /**\n     * Setups dimentions of slides.\n     *\n     * @return {Void}\n     */\n    setupSlides: function setupSlides() {\n      var width = this.slideWidth + 'px';\n      var slides = Components.Html.slides;\n\n      for (var i = 0; i < slides.length; i++) {\n        slides[i].style.width = width;\n      }\n    },\n\n\n    /**\n     * Setups dimentions of slides wrapper.\n     *\n     * @return {Void}\n     */\n    setupWrapper: function setupWrapper(dimention) {\n      Components.Html.wrapper.style.width = this.wrapperSize + 'px';\n    },\n\n\n    /**\n     * Removes applied styles from HTML elements.\n     *\n     * @returns {Void}\n     */\n    remove: function remove() {\n      var slides = Components.Html.slides;\n\n      for (var i = 0; i < slides.length; i++) {\n        slides[i].style.width = '';\n      }\n\n      Components.Html.wrapper.style.width = '';\n    }\n  };\n\n  define(Sizes, 'length', {\n    /**\n     * Gets count number of the slides.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Html.slides.length;\n    }\n  });\n\n  define(Sizes, 'width', {\n    /**\n     * Gets width value of the glide.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Html.root.offsetWidth;\n    }\n  });\n\n  define(Sizes, 'wrapperSize', {\n    /**\n     * Gets size of the slides wrapper.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Sizes.slideWidth * Sizes.length + Components.Gaps.grow + Components.Clones.grow;\n    }\n  });\n\n  define(Sizes, 'slideWidth', {\n    /**\n     * Gets width value of the single slide.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Sizes.width / Glide.settings.perView - Components.Peek.reductor - Components.Gaps.reductor;\n    }\n  });\n\n  /**\n   * Apply calculated glide's dimensions:\n   * - before building, so other dimentions (e.g. translate) will be calculated propertly\n   * - when resizing window to recalculate sildes dimensions\n   * - on updating via API, to calculate dimensions based on new options\n   */\n  Events.on(['build.before', 'resize', 'update'], function () {\n    Sizes.setupSlides();\n    Sizes.setupWrapper();\n  });\n\n  /**\n   * Remove calculated glide's dimensions:\n   * - on destoting to bring markup to its inital state\n   */\n  Events.on('destroy', function () {\n    Sizes.remove();\n  });\n\n  return Sizes;\n}\n\nfunction Build (Glide, Components, Events) {\n  var Build = {\n    /**\n     * Init glide building. Adds classes, sets\n     * dimensions and setups initial state.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      Events.emit('build.before');\n\n      this.typeClass();\n      this.activeClass();\n\n      Events.emit('build.after');\n    },\n\n\n    /**\n     * Adds `type` class to the glide element.\n     *\n     * @return {Void}\n     */\n    typeClass: function typeClass() {\n      Components.Html.root.classList.add(Glide.settings.classes[Glide.settings.type]);\n    },\n\n\n    /**\n     * Sets active class to current slide.\n     *\n     * @return {Void}\n     */\n    activeClass: function activeClass() {\n      var classes = Glide.settings.classes;\n      var slide = Components.Html.slides[Glide.index];\n\n      if (slide) {\n        slide.classList.add(classes.activeSlide);\n\n        siblings(slide).forEach(function (sibling) {\n          sibling.classList.remove(classes.activeSlide);\n        });\n      }\n    },\n\n\n    /**\n     * Removes HTML classes applied at building.\n     *\n     * @return {Void}\n     */\n    removeClasses: function removeClasses() {\n      var classes = Glide.settings.classes;\n\n      Components.Html.root.classList.remove(classes[Glide.settings.type]);\n\n      Components.Html.slides.forEach(function (sibling) {\n        sibling.classList.remove(classes.activeSlide);\n      });\n    }\n  };\n\n  /**\n   * Clear building classes:\n   * - on destroying to bring HTML to its initial state\n   * - on updating to remove classes before remounting component\n   */\n  Events.on(['destroy', 'update'], function () {\n    Build.removeClasses();\n  });\n\n  /**\n   * Remount component:\n   * - on resizing of the window to calculate new dimentions\n   * - on updating settings via API\n   */\n  Events.on(['resize', 'update'], function () {\n    Build.mount();\n  });\n\n  /**\n   * Swap active class of current slide:\n   * - after each move to the new index\n   */\n  Events.on('move.after', function () {\n    Build.activeClass();\n  });\n\n  return Build;\n}\n\nfunction Clones (Glide, Components, Events) {\n  var Clones = {\n    /**\n     * Create pattern map and collect slides to be cloned.\n     */\n    mount: function mount() {\n      this.items = [];\n\n      if (Glide.isType('carousel')) {\n        this.items = this.collect();\n      }\n    },\n\n\n    /**\n     * Collect clones with pattern.\n     *\n     * @return {Void}\n     */\n    collect: function collect() {\n      var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var slides = Components.Html.slides;\n      var _Glide$settings = Glide.settings,\n          perView = _Glide$settings.perView,\n          classes = _Glide$settings.classes;\n\n\n      var peekIncrementer = +!!Glide.settings.peek;\n      var part = perView + peekIncrementer;\n      var start = slides.slice(0, part);\n      var end = slides.slice(-part);\n\n      for (var r = 0; r < Math.max(1, Math.floor(perView / slides.length)); r++) {\n        for (var i = 0; i < start.length; i++) {\n          var clone = start[i].cloneNode(true);\n\n          clone.classList.add(classes.cloneSlide);\n\n          items.push(clone);\n        }\n\n        for (var _i = 0; _i < end.length; _i++) {\n          var _clone = end[_i].cloneNode(true);\n\n          _clone.classList.add(classes.cloneSlide);\n\n          items.unshift(_clone);\n        }\n      }\n\n      return items;\n    },\n\n\n    /**\n     * Append cloned slides with generated pattern.\n     *\n     * @return {Void}\n     */\n    append: function append() {\n      var items = this.items;\n      var _Components$Html = Components.Html,\n          wrapper = _Components$Html.wrapper,\n          slides = _Components$Html.slides;\n\n\n      var half = Math.floor(items.length / 2);\n      var prepend = items.slice(0, half).reverse();\n      var append = items.slice(half, items.length);\n      var width = Components.Sizes.slideWidth + 'px';\n\n      for (var i = 0; i < append.length; i++) {\n        wrapper.appendChild(append[i]);\n      }\n\n      for (var _i2 = 0; _i2 < prepend.length; _i2++) {\n        wrapper.insertBefore(prepend[_i2], slides[0]);\n      }\n\n      for (var _i3 = 0; _i3 < items.length; _i3++) {\n        items[_i3].style.width = width;\n      }\n    },\n\n\n    /**\n     * Remove all cloned slides.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      var items = this.items;\n\n\n      for (var i = 0; i < items.length; i++) {\n        Components.Html.wrapper.removeChild(items[i]);\n      }\n    }\n  };\n\n  define(Clones, 'grow', {\n    /**\n     * Gets additional dimentions value caused by clones.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return (Components.Sizes.slideWidth + Components.Gaps.value) * Clones.items.length;\n    }\n  });\n\n  /**\n   * Append additional slide's clones:\n   * - while glide's type is `carousel`\n   */\n  Events.on('update', function () {\n    Clones.remove();\n    Clones.mount();\n    Clones.append();\n  });\n\n  /**\n   * Append additional slide's clones:\n   * - while glide's type is `carousel`\n   */\n  Events.on('build.before', function () {\n    if (Glide.isType('carousel')) {\n      Clones.append();\n    }\n  });\n\n  /**\n   * Remove clones HTMLElements:\n   * - on destroying, to bring HTML to its initial state\n   */\n  Events.on('destroy', function () {\n    Clones.remove();\n  });\n\n  return Clones;\n}\n\nvar EventsBinder = function () {\n  /**\n   * Construct a EventsBinder instance.\n   */\n  function EventsBinder() {\n    var listeners = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, EventsBinder);\n\n    this.listeners = listeners;\n  }\n\n  /**\n   * Adds events listeners to arrows HTML elements.\n   *\n   * @param  {String|Array} events\n   * @param  {Element|Window|Document} el\n   * @param  {Function} closure\n   * @param  {Boolean|Object} capture\n   * @return {Void}\n   */\n\n\n  createClass(EventsBinder, [{\n    key: 'on',\n    value: function on(events, el, closure) {\n      var capture = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (isString(events)) {\n        events = [events];\n      }\n\n      for (var i = 0; i < events.length; i++) {\n        this.listeners[events[i]] = closure;\n\n        el.addEventListener(events[i], this.listeners[events[i]], capture);\n      }\n    }\n\n    /**\n     * Removes event listeners from arrows HTML elements.\n     *\n     * @param  {String|Array} events\n     * @param  {Element|Window|Document} el\n     * @param  {Boolean|Object} capture\n     * @return {Void}\n     */\n\n  }, {\n    key: 'off',\n    value: function off(events, el) {\n      var capture = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      if (isString(events)) {\n        events = [events];\n      }\n\n      for (var i = 0; i < events.length; i++) {\n        el.removeEventListener(events[i], this.listeners[events[i]], capture);\n      }\n    }\n\n    /**\n     * Destroy collected listeners.\n     *\n     * @returns {Void}\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      delete this.listeners;\n    }\n  }]);\n  return EventsBinder;\n}();\n\nfunction Resize (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  var Resize = {\n    /**\n     * Initializes window bindings.\n     */\n    mount: function mount() {\n      this.bind();\n    },\n\n\n    /**\n     * Binds `rezsize` listener to the window.\n     * It's a costly event, so we are debouncing it.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('resize', window, throttle(function () {\n        Events.emit('resize');\n      }, Glide.settings.throttle));\n    },\n\n\n    /**\n     * Unbinds listeners from the window.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('resize', window);\n    }\n  };\n\n  /**\n   * Remove bindings from window:\n   * - on destroying, to remove added EventListener\n   */\n  Events.on('destroy', function () {\n    Resize.unbind();\n    Binder.destroy();\n  });\n\n  return Resize;\n}\n\nvar VALID_DIRECTIONS = ['ltr', 'rtl'];\nvar FLIPED_MOVEMENTS = {\n  '>': '<',\n  '<': '>',\n  '=': '='\n};\n\nfunction Direction (Glide, Components, Events) {\n  var Direction = {\n    /**\n     * Setups gap value based on settings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.value = Glide.settings.direction;\n    },\n\n\n    /**\n     * Resolves pattern based on direction value\n     *\n     * @param {String} pattern\n     * @returns {String}\n     */\n    resolve: function resolve(pattern) {\n      var token = pattern.slice(0, 1);\n\n      if (this.is('rtl')) {\n        return pattern.split(token).join(FLIPED_MOVEMENTS[token]);\n      }\n\n      return pattern;\n    },\n\n\n    /**\n     * Checks value of direction mode.\n     *\n     * @param {String} direction\n     * @returns {Boolean}\n     */\n    is: function is(direction) {\n      return this.value === direction;\n    },\n\n\n    /**\n     * Applies direction class to the root HTML element.\n     *\n     * @return {Void}\n     */\n    addClass: function addClass() {\n      Components.Html.root.classList.add(Glide.settings.classes.direction[this.value]);\n    },\n\n\n    /**\n     * Removes direction class from the root HTML element.\n     *\n     * @return {Void}\n     */\n    removeClass: function removeClass() {\n      Components.Html.root.classList.remove(Glide.settings.classes.direction[this.value]);\n    }\n  };\n\n  define(Direction, 'value', {\n    /**\n     * Gets value of the direction.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return Direction._v;\n    },\n\n\n    /**\n     * Sets value of the direction.\n     *\n     * @param {String} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      if (VALID_DIRECTIONS.indexOf(value) > -1) {\n        Direction._v = value;\n      } else {\n        warn('Direction value must be `ltr` or `rtl`');\n      }\n    }\n  });\n\n  /**\n   * Clear direction class:\n   * - on destroy to bring HTML to its initial state\n   * - on update to remove class before reappling bellow\n   */\n  Events.on(['destroy', 'update'], function () {\n    Direction.removeClass();\n  });\n\n  /**\n   * Remount component:\n   * - on update to reflect changes in direction value\n   */\n  Events.on('update', function () {\n    Direction.mount();\n  });\n\n  /**\n   * Apply direction class:\n   * - before building to apply class for the first time\n   * - on updating to reapply direction class that may changed\n   */\n  Events.on(['build.before', 'update'], function () {\n    Direction.addClass();\n  });\n\n  return Direction;\n}\n\n/**\n * Reflects value of glide movement.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Rtl (Glide, Components) {\n  return {\n    /**\n     * Negates the passed translate if glide is in RTL option.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      if (Components.Direction.is('rtl')) {\n        return -translate;\n      }\n\n      return translate;\n    }\n  };\n}\n\n/**\n * Updates glide movement with a `gap` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Gap (Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with number in the `gap` settings.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      return translate + Components.Gaps.value * Glide.index;\n    }\n  };\n}\n\n/**\n * Updates glide movement with width of additional clones width.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Grow (Glide, Components) {\n  return {\n    /**\n     * Adds to the passed translate width of the half of clones.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      return translate + Components.Clones.grow / 2;\n    }\n  };\n}\n\n/**\n * Updates glide movement with a `peek` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Peeking (Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with a `peek` setting.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      if (Glide.settings.focusAt >= 0) {\n        var peek = Components.Peek.value;\n\n        if (isObject(peek)) {\n          return translate - peek.before;\n        }\n\n        return translate - peek;\n      }\n\n      return translate;\n    }\n  };\n}\n\n/**\n * Updates glide movement with a `focusAt` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Focusing (Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with index in the `focusAt` setting.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      var gap = Components.Gaps.value;\n      var width = Components.Sizes.width;\n      var focusAt = Glide.settings.focusAt;\n      var slideWidth = Components.Sizes.slideWidth;\n\n      if (focusAt === 'center') {\n        return translate - (width / 2 - slideWidth / 2);\n      }\n\n      return translate - slideWidth * focusAt - gap * focusAt;\n    }\n  };\n}\n\n/**\n * Applies diffrent transformers on translate value.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction mutator (Glide, Components, Events) {\n  /**\n   * Merge instance transformers with collection of default transformers.\n   * It's important that the Rtl component be last on the list,\n   * so it reflects all previous transformations.\n   *\n   * @type {Array}\n   */\n  var TRANSFORMERS = [Gap, Grow, Peeking, Focusing].concat(Glide._t, [Rtl]);\n\n  return {\n    /**\n     * Piplines translate value with registered transformers.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    mutate: function mutate(translate) {\n      for (var i = 0; i < TRANSFORMERS.length; i++) {\n        var transformer = TRANSFORMERS[i];\n\n        if (isFunction(transformer) && isFunction(transformer().modify)) {\n          translate = transformer(Glide, Components, Events).modify(translate);\n        } else {\n          warn('Transformer should be a function that returns an object with `modify()` method');\n        }\n      }\n\n      return translate;\n    }\n  };\n}\n\nfunction Translate (Glide, Components, Events) {\n  var Translate = {\n    /**\n     * Sets value of translate on HTML element.\n     *\n     * @param {Number} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      var transform = mutator(Glide, Components).mutate(value);\n\n      Components.Html.wrapper.style.transform = 'translate3d(' + -1 * transform + 'px, 0px, 0px)';\n    },\n\n\n    /**\n     * Removes value of translate from HTML element.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      Components.Html.wrapper.style.transform = '';\n    }\n  };\n\n  /**\n   * Set new translate value:\n   * - on move to reflect index change\n   * - on updating via API to reflect possible changes in options\n   */\n  Events.on('move', function (context) {\n    var gap = Components.Gaps.value;\n    var length = Components.Sizes.length;\n    var width = Components.Sizes.slideWidth;\n\n    if (Glide.isType('carousel') && Components.Run.isOffset('<')) {\n      Components.Transition.after(function () {\n        Events.emit('translate.jump');\n\n        Translate.set(width * (length - 1));\n      });\n\n      return Translate.set(-width - gap * length);\n    }\n\n    if (Glide.isType('carousel') && Components.Run.isOffset('>')) {\n      Components.Transition.after(function () {\n        Events.emit('translate.jump');\n\n        Translate.set(0);\n      });\n\n      return Translate.set(width * length + gap * length);\n    }\n\n    return Translate.set(context.movement);\n  });\n\n  /**\n   * Remove translate:\n   * - on destroying to bring markup to its inital state\n   */\n  Events.on('destroy', function () {\n    Translate.remove();\n  });\n\n  return Translate;\n}\n\nfunction Transition (Glide, Components, Events) {\n  /**\n   * Holds inactivity status of transition.\n   * When true transition is not applied.\n   *\n   * @type {Boolean}\n   */\n  var disabled = false;\n\n  var Transition = {\n    /**\n     * Composes string of the CSS transition.\n     *\n     * @param {String} property\n     * @return {String}\n     */\n    compose: function compose(property) {\n      var settings = Glide.settings;\n\n      if (!disabled) {\n        return property + ' ' + this.duration + 'ms ' + settings.animationTimingFunc;\n      }\n\n      return property + ' 0ms ' + settings.animationTimingFunc;\n    },\n\n\n    /**\n     * Sets value of transition on HTML element.\n     *\n     * @param {String=} property\n     * @return {Void}\n     */\n    set: function set() {\n      var property = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'transform';\n\n      Components.Html.wrapper.style.transition = this.compose(property);\n    },\n\n\n    /**\n     * Removes value of transition from HTML element.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      Components.Html.wrapper.style.transition = '';\n    },\n\n\n    /**\n     * Runs callback after animation.\n     *\n     * @param  {Function} callback\n     * @return {Void}\n     */\n    after: function after(callback) {\n      setTimeout(function () {\n        callback();\n      }, this.duration);\n    },\n\n\n    /**\n     * Enable transition.\n     *\n     * @return {Void}\n     */\n    enable: function enable() {\n      disabled = false;\n\n      this.set();\n    },\n\n\n    /**\n     * Disable transition.\n     *\n     * @return {Void}\n     */\n    disable: function disable() {\n      disabled = true;\n\n      this.set();\n    }\n  };\n\n  define(Transition, 'duration', {\n    /**\n     * Gets duration of the transition based\n     * on currently running animation type.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var settings = Glide.settings;\n\n      if (Glide.isType('slider') && Components.Run.offset) {\n        return settings.rewindDuration;\n      }\n\n      return settings.animationDuration;\n    }\n  });\n\n  /**\n   * Set transition `style` value:\n   * - on each moving, because it may be cleared by offset move\n   */\n  Events.on('move', function () {\n    Transition.set();\n  });\n\n  /**\n   * Disable transition:\n   * - before initial build to avoid transitioning from `0` to `startAt` index\n   * - while resizing window and recalculating dimentions\n   * - on jumping from offset transition at start and end edges in `carousel` type\n   */\n  Events.on(['build.before', 'resize', 'translate.jump'], function () {\n    Transition.disable();\n  });\n\n  /**\n   * Enable transition:\n   * - on each running, because it may be disabled by offset move\n   */\n  Events.on('run', function () {\n    Transition.enable();\n  });\n\n  /**\n   * Remove transition:\n   * - on destroying to bring markup to its inital state\n   */\n  Events.on('destroy', function () {\n    Transition.remove();\n  });\n\n  return Transition;\n}\n\n/**\n * Test via a getter in the options object to see\n * if the passive property is accessed.\n *\n * @see https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n */\n\nvar supportsPassive = false;\n\ntry {\n  var opts = Object.defineProperty({}, 'passive', {\n    get: function get() {\n      supportsPassive = true;\n    }\n  });\n\n  window.addEventListener('testPassive', null, opts);\n  window.removeEventListener('testPassive', null, opts);\n} catch (e) {}\n\nvar supportsPassive$1 = supportsPassive;\n\nvar START_EVENTS = ['touchstart', 'mousedown'];\nvar MOVE_EVENTS = ['touchmove', 'mousemove'];\nvar END_EVENTS = ['touchend', 'touchcancel', 'mouseup', 'mouseleave'];\nvar MOUSE_EVENTS = ['mousedown', 'mousemove', 'mouseup', 'mouseleave'];\n\nfunction Swipe (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  var swipeSin = 0;\n  var swipeStartX = 0;\n  var swipeStartY = 0;\n  var disabled = false;\n  var moveable = true;\n  var capture = supportsPassive$1 ? { passive: true } : false;\n\n  var Swipe = {\n    /**\n     * Initializes swipe bindings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.bindSwipeStart();\n    },\n\n\n    /**\n     * Handler for `swipestart` event. Calculates entry points of the user's tap.\n     *\n     * @param {Object} event\n     * @return {Void}\n     */\n    start: function start(event) {\n      if (!disabled && !Glide.disabled) {\n        this.disable();\n\n        var swipe = this.touches(event);\n\n        moveable = true;\n        swipeSin = null;\n        swipeStartX = toInt(swipe.pageX);\n        swipeStartY = toInt(swipe.pageY);\n\n        this.bindSwipeMove();\n        this.bindSwipeEnd();\n\n        Events.emit('swipe.start');\n      }\n    },\n\n\n    /**\n     * Handler for `swipemove` event. Calculates user's tap angle and distance.\n     *\n     * @param {Object} event\n     */\n    move: function move(event) {\n      if (!Glide.disabled) {\n        var _Glide$settings = Glide.settings,\n            touchAngle = _Glide$settings.touchAngle,\n            touchRatio = _Glide$settings.touchRatio,\n            classes = _Glide$settings.classes;\n\n\n        var swipe = this.touches(event);\n\n        var subExSx = toInt(swipe.pageX) - swipeStartX;\n        var subEySy = toInt(swipe.pageY) - swipeStartY;\n        var powEX = Math.abs(subExSx << 2);\n        var powEY = Math.abs(subEySy << 2);\n        var swipeHypotenuse = Math.sqrt(powEX + powEY);\n        var swipeCathetus = Math.sqrt(powEY);\n\n        swipeSin = Math.asin(swipeCathetus / swipeHypotenuse);\n\n        if (moveable && swipeSin * 180 / Math.PI < touchAngle) {\n          event.stopPropagation();\n\n          Components.Move.make(subExSx * toFloat(touchRatio));\n\n          Components.Html.root.classList.add(classes.dragging);\n\n          Events.emit('swipe.move');\n        } else {\n          moveable = false;\n\n          return false;\n        }\n      }\n    },\n\n\n    /**\n     * Handler for `swipeend` event. Finitializes user's tap and decides about glide move.\n     *\n     * @param {Object} event\n     * @return {Void}\n     */\n    end: function end(event) {\n      if (!Glide.disabled) {\n        var settings = Glide.settings;\n\n        var swipe = this.touches(event);\n        var threshold = this.threshold(event);\n\n        var swipeDistance = swipe.pageX - swipeStartX;\n        var swipeDeg = swipeSin * 180 / Math.PI;\n        var steps = Math.round(swipeDistance / Components.Sizes.slideWidth);\n\n        this.enable();\n\n        if (moveable) {\n          if (swipeDistance > threshold && swipeDeg < settings.touchAngle) {\n            // While swipe is positive and greater than threshold move backward.\n            if (settings.perTouch) {\n              steps = Math.min(steps, toInt(settings.perTouch));\n            }\n\n            if (Components.Direction.is('rtl')) {\n              steps = -steps;\n            }\n\n            Components.Run.make(Components.Direction.resolve('<' + steps));\n          } else if (swipeDistance < -threshold && swipeDeg < settings.touchAngle) {\n            // While swipe is negative and lower than negative threshold move forward.\n            if (settings.perTouch) {\n              steps = Math.max(steps, -toInt(settings.perTouch));\n            }\n\n            if (Components.Direction.is('rtl')) {\n              steps = -steps;\n            }\n\n            Components.Run.make(Components.Direction.resolve('>' + steps));\n          } else {\n            // While swipe don't reach distance apply previous transform.\n            Components.Move.make();\n          }\n        }\n\n        Components.Html.root.classList.remove(settings.classes.dragging);\n\n        this.unbindSwipeMove();\n        this.unbindSwipeEnd();\n\n        Events.emit('swipe.end');\n      }\n    },\n\n\n    /**\n     * Binds swipe's starting event.\n     *\n     * @return {Void}\n     */\n    bindSwipeStart: function bindSwipeStart() {\n      var _this = this;\n\n      var settings = Glide.settings;\n\n      if (settings.swipeThreshold) {\n        Binder.on(START_EVENTS[0], Components.Html.wrapper, function (event) {\n          _this.start(event);\n        }, capture);\n      }\n\n      if (settings.dragThreshold) {\n        Binder.on(START_EVENTS[1], Components.Html.wrapper, function (event) {\n          _this.start(event);\n        }, capture);\n      }\n    },\n\n\n    /**\n     * Unbinds swipe's starting event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeStart: function unbindSwipeStart() {\n      Binder.off(START_EVENTS[0], Components.Html.wrapper, capture);\n      Binder.off(START_EVENTS[1], Components.Html.wrapper, capture);\n    },\n\n\n    /**\n     * Binds swipe's moving event.\n     *\n     * @return {Void}\n     */\n    bindSwipeMove: function bindSwipeMove() {\n      var _this2 = this;\n\n      Binder.on(MOVE_EVENTS, Components.Html.wrapper, throttle(function (event) {\n        _this2.move(event);\n      }, Glide.settings.throttle), capture);\n    },\n\n\n    /**\n     * Unbinds swipe's moving event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeMove: function unbindSwipeMove() {\n      Binder.off(MOVE_EVENTS, Components.Html.wrapper, capture);\n    },\n\n\n    /**\n     * Binds swipe's ending event.\n     *\n     * @return {Void}\n     */\n    bindSwipeEnd: function bindSwipeEnd() {\n      var _this3 = this;\n\n      Binder.on(END_EVENTS, Components.Html.wrapper, function (event) {\n        _this3.end(event);\n      });\n    },\n\n\n    /**\n     * Unbinds swipe's ending event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeEnd: function unbindSwipeEnd() {\n      Binder.off(END_EVENTS, Components.Html.wrapper);\n    },\n\n\n    /**\n     * Normalizes event touches points accorting to different types.\n     *\n     * @param {Object} event\n     */\n    touches: function touches(event) {\n      if (MOUSE_EVENTS.indexOf(event.type) > -1) {\n        return event;\n      }\n\n      return event.touches[0] || event.changedTouches[0];\n    },\n\n\n    /**\n     * Gets value of minimum swipe distance settings based on event type.\n     *\n     * @return {Number}\n     */\n    threshold: function threshold(event) {\n      var settings = Glide.settings;\n\n      if (MOUSE_EVENTS.indexOf(event.type) > -1) {\n        return settings.dragThreshold;\n      }\n\n      return settings.swipeThreshold;\n    },\n\n\n    /**\n     * Enables swipe event.\n     *\n     * @return {self}\n     */\n    enable: function enable() {\n      disabled = false;\n\n      Components.Transition.enable();\n\n      return this;\n    },\n\n\n    /**\n     * Disables swipe event.\n     *\n     * @return {self}\n     */\n    disable: function disable() {\n      disabled = true;\n\n      Components.Transition.disable();\n\n      return this;\n    }\n  };\n\n  /**\n   * Add component class:\n   * - after initial building\n   */\n  Events.on('build.after', function () {\n    Components.Html.root.classList.add(Glide.settings.classes.swipeable);\n  });\n\n  /**\n   * Remove swiping bindings:\n   * - on destroying, to remove added EventListeners\n   */\n  Events.on('destroy', function () {\n    Swipe.unbindSwipeStart();\n    Swipe.unbindSwipeMove();\n    Swipe.unbindSwipeEnd();\n    Binder.destroy();\n  });\n\n  return Swipe;\n}\n\nfunction Images (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  var Images = {\n    /**\n     * Binds listener to glide wrapper.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.bind();\n    },\n\n\n    /**\n     * Binds `dragstart` event on wrapper to prevent dragging images.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('dragstart', Components.Html.wrapper, this.dragstart);\n    },\n\n\n    /**\n     * Unbinds `dragstart` event on wrapper.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('dragstart', Components.Html.wrapper);\n    },\n\n\n    /**\n     * Event handler. Prevents dragging.\n     *\n     * @return {Void}\n     */\n    dragstart: function dragstart(event) {\n      event.preventDefault();\n    }\n  };\n\n  /**\n   * Remove bindings from images:\n   * - on destroying, to remove added EventListeners\n   */\n  Events.on('destroy', function () {\n    Images.unbind();\n    Binder.destroy();\n  });\n\n  return Images;\n}\n\nfunction Anchors (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  /**\n   * Holds detaching status of anchors.\n   * Prevents detaching of already detached anchors.\n   *\n   * @private\n   * @type {Boolean}\n   */\n  var detached = false;\n\n  /**\n   * Holds preventing status of anchors.\n   * If `true` redirection after click will be disabled.\n   *\n   * @private\n   * @type {Boolean}\n   */\n  var prevented = false;\n\n  var Anchors = {\n    /**\n     * Setups a initial state of anchors component.\n     *\n     * @returns {Void}\n     */\n    mount: function mount() {\n      /**\n       * Holds collection of anchors elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n      this._a = Components.Html.wrapper.querySelectorAll('a');\n\n      this.bind();\n    },\n\n\n    /**\n     * Binds events to anchors inside a track.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('click', Components.Html.wrapper, this.click);\n    },\n\n\n    /**\n     * Unbinds events attached to anchors inside a track.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('click', Components.Html.wrapper);\n    },\n\n\n    /**\n     * Handler for click event. Prevents clicks when glide is in `prevent` status.\n     *\n     * @param  {Object} event\n     * @return {Void}\n     */\n    click: function click(event) {\n      if (prevented) {\n        event.stopPropagation();\n        event.preventDefault();\n      }\n    },\n\n\n    /**\n     * Detaches anchors click event inside glide.\n     *\n     * @return {self}\n     */\n    detach: function detach() {\n      prevented = true;\n\n      if (!detached) {\n        for (var i = 0; i < this.items.length; i++) {\n          this.items[i].draggable = false;\n\n          this.items[i].setAttribute('data-href', this.items[i].getAttribute('href'));\n\n          this.items[i].removeAttribute('href');\n        }\n\n        detached = true;\n      }\n\n      return this;\n    },\n\n\n    /**\n     * Attaches anchors click events inside glide.\n     *\n     * @return {self}\n     */\n    attach: function attach() {\n      prevented = false;\n\n      if (detached) {\n        for (var i = 0; i < this.items.length; i++) {\n          this.items[i].draggable = true;\n\n          this.items[i].setAttribute('href', this.items[i].getAttribute('data-href'));\n        }\n\n        detached = false;\n      }\n\n      return this;\n    }\n  };\n\n  define(Anchors, 'items', {\n    /**\n     * Gets collection of the arrows HTML elements.\n     *\n     * @return {HTMLElement[]}\n     */\n    get: function get() {\n      return Anchors._a;\n    }\n  });\n\n  /**\n   * Detach anchors inside slides:\n   * - on swiping, so they won't redirect to its `href` attributes\n   */\n  Events.on('swipe.move', function () {\n    Anchors.detach();\n  });\n\n  /**\n   * Attach anchors inside slides:\n   * - after swiping and transitions ends, so they can redirect after click again\n   */\n  Events.on('swipe.end', function () {\n    Components.Transition.after(function () {\n      Anchors.attach();\n    });\n  });\n\n  /**\n   * Unbind anchors inside slides:\n   * - on destroying, to bring anchors to its initial state\n   */\n  Events.on('destroy', function () {\n    Anchors.attach();\n    Anchors.unbind();\n    Binder.destroy();\n  });\n\n  return Anchors;\n}\n\nvar NAV_SELECTOR = '[data-glide-el=\"controls[nav]\"]';\nvar CONTROLS_SELECTOR = '[data-glide-el^=\"controls\"]';\n\nfunction Controls (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  var Controls = {\n    /**\n     * Inits arrows. Binds events listeners\n     * to the arrows HTML elements.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      /**\n       * Collection of navigation HTML elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n      this._n = Components.Html.root.querySelectorAll(NAV_SELECTOR);\n\n      /**\n       * Collection of controls HTML elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n      this._c = Components.Html.root.querySelectorAll(CONTROLS_SELECTOR);\n\n      this.addBindings();\n    },\n\n\n    /**\n     * Sets active class to current slide.\n     *\n     * @return {Void}\n     */\n    setActive: function setActive() {\n      for (var i = 0; i < this._n.length; i++) {\n        this.addClass(this._n[i].children);\n      }\n    },\n\n\n    /**\n     * Removes active class to current slide.\n     *\n     * @return {Void}\n     */\n    removeActive: function removeActive() {\n      for (var i = 0; i < this._n.length; i++) {\n        this.removeClass(this._n[i].children);\n      }\n    },\n\n\n    /**\n     * Toggles active class on items inside navigation.\n     *\n     * @param  {HTMLElement} controls\n     * @return {Void}\n     */\n    addClass: function addClass(controls) {\n      var settings = Glide.settings;\n      var item = controls[Glide.index];\n\n      item.classList.add(settings.classes.activeNav);\n\n      siblings(item).forEach(function (sibling) {\n        sibling.classList.remove(settings.classes.activeNav);\n      });\n    },\n\n\n    /**\n     * Removes active class from active control.\n     *\n     * @param  {HTMLElement} controls\n     * @return {Void}\n     */\n    removeClass: function removeClass(controls) {\n      controls[Glide.index].classList.remove(Glide.settings.classes.activeNav);\n    },\n\n\n    /**\n     * Adds handles to the each group of controls.\n     *\n     * @return {Void}\n     */\n    addBindings: function addBindings() {\n      for (var i = 0; i < this._c.length; i++) {\n        this.bind(this._c[i].children);\n      }\n    },\n\n\n    /**\n     * Removes handles from the each group of controls.\n     *\n     * @return {Void}\n     */\n    removeBindings: function removeBindings() {\n      for (var i = 0; i < this._c.length; i++) {\n        this.unbind(this._c[i].children);\n      }\n    },\n\n\n    /**\n     * Binds events to arrows HTML elements.\n     *\n     * @param {HTMLCollection} elements\n     * @return {Void}\n     */\n    bind: function bind(elements) {\n      for (var i = 0; i < elements.length; i++) {\n        Binder.on(['click', 'touchstart'], elements[i], this.click);\n      }\n    },\n\n\n    /**\n     * Unbinds events binded to the arrows HTML elements.\n     *\n     * @param {HTMLCollection} elements\n     * @return {Void}\n     */\n    unbind: function unbind(elements) {\n      for (var i = 0; i < elements.length; i++) {\n        Binder.off(['click', 'touchstart'], elements[i]);\n      }\n    },\n\n\n    /**\n     * Handles `click` event on the arrows HTML elements.\n     * Moves slider in driection precised in\n     * `data-glide-dir` attribute.\n     *\n     * @param {Object} event\n     * @return {Void}\n     */\n    click: function click(event) {\n      event.preventDefault();\n\n      Components.Run.make(Components.Direction.resolve(event.currentTarget.getAttribute('data-glide-dir')));\n    }\n  };\n\n  define(Controls, 'items', {\n    /**\n     * Gets collection of the controls HTML elements.\n     *\n     * @return {HTMLElement[]}\n     */\n    get: function get() {\n      return Controls._c;\n    }\n  });\n\n  /**\n   * Swap active class of current navigation item:\n   * - after mounting to set it to initial index\n   * - after each move to the new index\n   */\n  Events.on(['mount.after', 'move.after'], function () {\n    Controls.setActive();\n  });\n\n  /**\n   * Remove bindings and HTML Classes:\n   * - on destroying, to bring markup to its initial state\n   */\n  Events.on('destroy', function () {\n    Controls.removeBindings();\n    Controls.removeActive();\n    Binder.destroy();\n  });\n\n  return Controls;\n}\n\nfunction Keyboard (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  var Keyboard = {\n    /**\n     * Binds keyboard events on component mount.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      if (Glide.settings.keyboard) {\n        this.bind();\n      }\n    },\n\n\n    /**\n     * Adds keyboard press events.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('keyup', document, this.press);\n    },\n\n\n    /**\n     * Removes keyboard press events.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('keyup', document);\n    },\n\n\n    /**\n     * Handles keyboard's arrows press and moving glide foward and backward.\n     *\n     * @param  {Object} event\n     * @return {Void}\n     */\n    press: function press(event) {\n      if (event.keyCode === 39) {\n        Components.Run.make(Components.Direction.resolve('>'));\n      }\n\n      if (event.keyCode === 37) {\n        Components.Run.make(Components.Direction.resolve('<'));\n      }\n    }\n  };\n\n  /**\n   * Remove bindings from keyboard:\n   * - on destroying to remove added events\n   * - on updating to remove events before remounting\n   */\n  Events.on(['destroy', 'update'], function () {\n    Keyboard.unbind();\n  });\n\n  /**\n   * Remount component\n   * - on updating to reflect potential changes in settings\n   */\n  Events.on('update', function () {\n    Keyboard.mount();\n  });\n\n  /**\n   * Destroy binder:\n   * - on destroying to remove listeners\n   */\n  Events.on('destroy', function () {\n    Binder.destroy();\n  });\n\n  return Keyboard;\n}\n\nfunction Autoplay (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  var Autoplay = {\n    /**\n     * Initializes autoplaying and events.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.start();\n\n      if (Glide.settings.hoverpause) {\n        this.bind();\n      }\n    },\n\n\n    /**\n     * Starts autoplaying in configured interval.\n     *\n     * @param {Boolean|Number} force Run autoplaying with passed interval regardless of `autoplay` settings\n     * @return {Void}\n     */\n    start: function start() {\n      var _this = this;\n\n      if (Glide.settings.autoplay) {\n        if (isUndefined(this._i)) {\n          this._i = setInterval(function () {\n            _this.stop();\n\n            Components.Run.make('>');\n\n            _this.start();\n          }, this.time);\n        }\n      }\n    },\n\n\n    /**\n     * Stops autorunning of the glide.\n     *\n     * @return {Void}\n     */\n    stop: function stop() {\n      this._i = clearInterval(this._i);\n    },\n\n\n    /**\n     * Stops autoplaying while mouse is over glide's area.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      var _this2 = this;\n\n      Binder.on('mouseover', Components.Html.root, function () {\n        _this2.stop();\n      });\n\n      Binder.on('mouseout', Components.Html.root, function () {\n        _this2.start();\n      });\n    },\n\n\n    /**\n     * Unbind mouseover events.\n     *\n     * @returns {Void}\n     */\n    unbind: function unbind() {\n      Binder.off(['mouseover', 'mouseout'], Components.Html.root);\n    }\n  };\n\n  define(Autoplay, 'time', {\n    /**\n     * Gets time period value for the autoplay interval. Prioritizes\n     * times in `data-glide-autoplay` attrubutes over options.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var autoplay = Components.Html.slides[Glide.index].getAttribute('data-glide-autoplay');\n\n      if (autoplay) {\n        return toInt(autoplay);\n      }\n\n      return toInt(Glide.settings.autoplay);\n    }\n  });\n\n  /**\n   * Stop autoplaying and unbind events:\n   * - on destroying, to clear defined interval\n   * - on updating via API to reset interval that may changed\n   */\n  Events.on(['destroy', 'update'], function () {\n    Autoplay.unbind();\n  });\n\n  /**\n   * Stop autoplaying:\n   * - before each run, to restart autoplaying\n   * - on pausing via API\n   * - on destroying, to clear defined interval\n   * - while starting a swipe\n   * - on updating via API to reset interval that may changed\n   */\n  Events.on(['run.before', 'pause', 'destroy', 'swipe.start', 'update'], function () {\n    Autoplay.stop();\n  });\n\n  /**\n   * Start autoplaying:\n   * - after each run, to restart autoplaying\n   * - on playing via API\n   * - while ending a swipe\n   */\n  Events.on(['run.after', 'play', 'swipe.end'], function () {\n    Autoplay.start();\n  });\n\n  /**\n   * Remount autoplaying:\n   * - on updating via API to reset interval that may changed\n   */\n  Events.on('update', function () {\n    Autoplay.mount();\n  });\n\n  /**\n   * Destroy a binder:\n   * - on destroying glide instance to clearup listeners\n   */\n  Events.on('destroy', function () {\n    Binder.destroy();\n  });\n\n  return Autoplay;\n}\n\n/**\n * Sorts keys of breakpoint object so they will be ordered from lower to bigger.\n *\n * @param {Object} points\n * @returns {Object}\n */\nfunction sortBreakpoints(points) {\n  if (isObject(points)) {\n    return sortKeys(points);\n  } else {\n    warn('Breakpoints option must be an object');\n  }\n\n  return {};\n}\n\nfunction Breakpoints (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  /**\n   * Holds reference to settings.\n   *\n   * @type {Object}\n   */\n  var settings = Glide.settings;\n\n  /**\n   * Holds reference to breakpoints object in settings. Sorts breakpoints\n   * from smaller to larger. It is required in order to proper\n   * matching currently active breakpoint settings.\n   *\n   * @type {Object}\n   */\n  var points = sortBreakpoints(settings.breakpoints);\n\n  /**\n   * Cache initial settings before overwritting.\n   *\n   * @type {Object}\n   */\n  var defaults = _extends({}, settings);\n\n  var Breakpoints = {\n    /**\n     * Matches settings for currectly matching media breakpoint.\n     *\n     * @param {Object} points\n     * @returns {Object}\n     */\n    match: function match(points) {\n      if (typeof window.matchMedia !== 'undefined') {\n        for (var point in points) {\n          if (points.hasOwnProperty(point)) {\n            if (window.matchMedia('(max-width: ' + point + 'px)').matches) {\n              return points[point];\n            }\n          }\n        }\n      }\n\n      return defaults;\n    }\n  };\n\n  /**\n   * Overwrite instance settings with currently matching breakpoint settings.\n   * This happens right after component initialization.\n   */\n  _extends(settings, Breakpoints.match(points));\n\n  /**\n   * Update glide with settings of matched brekpoint:\n   * - window resize to update slider\n   */\n  Binder.on('resize', window, throttle(function () {\n    Glide.settings = mergeOptions(settings, Breakpoints.match(points));\n  }, Glide.settings.throttle));\n\n  /**\n   * Resort and update default settings:\n   * - on reinit via API, so breakpoint matching will be performed with options\n   */\n  Events.on('update', function () {\n    points = sortBreakpoints(points);\n\n    defaults = _extends({}, settings);\n  });\n\n  /**\n   * Unbind resize listener:\n   * - on destroying, to bring markup to its initial state\n   */\n  Events.on('destroy', function () {\n    Binder.off('resize', window);\n  });\n\n  return Breakpoints;\n}\n\nvar COMPONENTS = {\n  // Required\n  Html: Html,\n  Translate: Translate,\n  Transition: Transition,\n  Direction: Direction,\n  Peek: Peek,\n  Sizes: Sizes,\n  Gaps: Gaps,\n  Move: Move,\n  Clones: Clones,\n  Resize: Resize,\n  Build: Build,\n  Run: Run,\n\n  // Optional\n  Swipe: Swipe,\n  Images: Images,\n  Anchors: Anchors,\n  Controls: Controls,\n  Keyboard: Keyboard,\n  Autoplay: Autoplay,\n  Breakpoints: Breakpoints\n};\n\nvar Glide$1 = function (_Core) {\n  inherits(Glide$$1, _Core);\n\n  function Glide$$1() {\n    classCallCheck(this, Glide$$1);\n    return possibleConstructorReturn(this, (Glide$$1.__proto__ || Object.getPrototypeOf(Glide$$1)).apply(this, arguments));\n  }\n\n  createClass(Glide$$1, [{\n    key: 'mount',\n    value: function mount() {\n      var extensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      return get(Glide$$1.prototype.__proto__ || Object.getPrototypeOf(Glide$$1.prototype), 'mount', this).call(this, _extends({}, COMPONENTS, extensions));\n    }\n  }]);\n  return Glide$$1;\n}(Glide);\n\nexport default Glide$1;\n","import \"./scss/styles.scss\";\nimport Glide from '@glidejs/glide';\n\n\nconst glideTop = new Glide('#top-slider', {\n    gap: 20\n});\n\nconst glideBottom = new Glide('#bottom-slider', {\n    gap: 20\n});\n\nglideTop.mount();\nglideBottom.mount();"],"sourceRoot":""}